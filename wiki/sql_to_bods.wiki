#summary File comparison util for comparing files with float numbers

= Introduction =

Translate SQL code into SAP BODS sql() function calls.

== Details ==

Script splits SQL statements from input file by ';' symbol at the end of line.
Then each statement is wrapped into BODS sql() function call.

Usage: sql_to_bods.exe bods_datastore_name input_file [output_file]
If output_file is missed, the STDOUT is used instead.

== Demo ==
{{{
python sql_to_bods.py ds_DWH test1.sql test1.bods
}}}

Input SQL file:
{{{
CREATE TABLE PSXLATITEM
  (
    FIELDVALUE     VARCHAR2 (4 CHAR) NOT NULL ,
    EFFDT          DATE NOT NULL ,
    EFF_STATUS     VARCHAR2 (1 CHAR) NOT NULL ,
    XLATLONGNAME   VARCHAR2 (30 CHAR) NOT NULL ,
    XLATSHORTNAME  VARCHAR2 (10 CHAR) NOT NULL ,
    LASTUPDDTTM    TIMESTAMP ,
    LASTUPDOPRID   VARCHAR2 (30 CHAR) NOT NULL ,
    SYNCID         NUMBER (*,0) NOT NULL ,
    DW_PROCESS_WID NUMBER (12) NOT NULL ,
    DW_SOURCE_WID  NUMBER (12) NOT NULL ,
    DW_CREATE_DTM  DATE NOT NULL ,
    FIELDNAME      VARCHAR2 (18 CHAR) NOT NULL
  ) ;

ALTER TABLE PSXLATITEM ADD CONSTRAINT PSXLATITEM_PK PRIMARY KEY ( FIELDVALUE, EFFDT ) ;

CREATE TABLE PS_ADDRESSES
  (
    EMPLID         VARCHAR2 (11 CHAR) NOT NULL ,
    ADDRESS_TYPE   VARCHAR2 (4 CHAR) NOT NULL ,
    EFFDT          DATE NOT NULL ,
    EFF_STATUS     VARCHAR2 (1 CHAR) NOT NULL ,
    COUNTRY        VARCHAR2 (3 CHAR) NOT NULL ,
    ADDRESS1       VARCHAR2 (55 CHAR) NOT NULL ,
    ADDRESS2       VARCHAR2 (55 CHAR) NOT NULL ,
    ADDRESS3       VARCHAR2 (55 CHAR) NOT NULL ,
    ADDRESS4       VARCHAR2 (55 CHAR) NOT NULL ,
    CITY           VARCHAR2 (30 CHAR) NOT NULL ,
    NUM1           VARCHAR2 (6 CHAR) NOT NULL ,
    NUM2           VARCHAR2 (6 CHAR) NOT NULL ,
    HOUSE_TYPE     VARCHAR2 (2 CHAR) NOT NULL ,
    ADDR_FIELD1    VARCHAR2 (2 CHAR) NOT NULL ,
    ADDR_FIELD2    VARCHAR2 (4 CHAR) NOT NULL ,
    ADDR_FIELD3    VARCHAR2 (4 CHAR) NOT NULL ,
    COUNTY         VARCHAR2 (30 CHAR) NOT NULL ,
    STATE          VARCHAR2 (6 CHAR) NOT NULL ,
    POSTAL         VARCHAR2 (12 CHAR) NOT NULL ,
    GEO_CODE       VARCHAR2 (11 CHAR) NOT NULL ,
    IN_CITY_LIMIT  VARCHAR2 (1 CHAR) NOT NULL ,
    ADDRESS1_AC    VARCHAR2 (55 CHAR) NOT NULL ,
    ADDRESS2_AC    VARCHAR2 (55 CHAR) NOT NULL ,
    ADDRESS3_AC    VARCHAR2 (55 CHAR) NOT NULL ,
    CITY_AC        VARCHAR2 (30 CHAR) NOT NULL ,
    REG_REGION     VARCHAR2 (5 CHAR) NOT NULL ,
    LASTUPDDTTM    TIMESTAMP ,
    LASTUPDOPRID   VARCHAR2 (30 CHAR) NOT NULL ,
    DW_PROCESS_WID NUMBER (12) NOT NULL ,
    DW_SOURCE_WID  NUMBER (12) NOT NULL ,
    DW_CREATE_DTM  DATE NOT NULL
  ) ;

ALTER TABLE PS_ADDRESSES ADD CONSTRAINT PS_ADDRESSES_PK PRIMARY KEY ( EFFDT, ADDRESS_TYPE, EMPLID ) ;
}}}

Output BODS script:
{{{
sql('ds_DWH', ''
  || 'CREATE TABLE PSXLATITEM '
  || '( '
  || 'FIELDVALUE     VARCHAR2 (4 CHAR) NOT NULL , '
  || 'EFFDT          DATE NOT NULL , '
  || 'EFF_STATUS     VARCHAR2 (1 CHAR) NOT NULL , '
  || 'XLATLONGNAME   VARCHAR2 (30 CHAR) NOT NULL , '
  || 'XLATSHORTNAME  VARCHAR2 (10 CHAR) NOT NULL , '
  || 'LASTUPDDTTM    TIMESTAMP , '
  || 'LASTUPDOPRID   VARCHAR2 (30 CHAR) NOT NULL , '
  || 'SYNCID         NUMBER (*,0) NOT NULL , '
  || 'DW_PROCESS_WID NUMBER (12) NOT NULL , '
  || 'DW_SOURCE_WID  NUMBER (12) NOT NULL , '
  || 'DW_CREATE_DTM  DATE NOT NULL , '
  || 'FIELDNAME      VARCHAR2 (18 CHAR) NOT NULL '
  || ') '
);

sql('ds_DWH', ''
  || 'ALTER TABLE PSXLATITEM ADD CONSTRAINT PSXLATITEM_PK PRIMARY KEY ( FIELDVALUE, EFFDT ) '
);

sql('ds_DWH', ''
  || 'CREATE TABLE PS_ADDRESSES '
  || '( '
  || 'EMPLID         VARCHAR2 (11 CHAR) NOT NULL , '
  || 'ADDRESS_TYPE   VARCHAR2 (4 CHAR) NOT NULL , '
  || 'EFFDT          DATE NOT NULL , '
  || 'EFF_STATUS     VARCHAR2 (1 CHAR) NOT NULL , '
  || 'COUNTRY        VARCHAR2 (3 CHAR) NOT NULL , '
  || 'ADDRESS1       VARCHAR2 (55 CHAR) NOT NULL , '
  || 'ADDRESS2       VARCHAR2 (55 CHAR) NOT NULL , '
  || 'ADDRESS3       VARCHAR2 (55 CHAR) NOT NULL , '
  || 'ADDRESS4       VARCHAR2 (55 CHAR) NOT NULL , '
  || 'CITY           VARCHAR2 (30 CHAR) NOT NULL , '
  || 'NUM1           VARCHAR2 (6 CHAR) NOT NULL , '
  || 'NUM2           VARCHAR2 (6 CHAR) NOT NULL , '
  || 'HOUSE_TYPE     VARCHAR2 (2 CHAR) NOT NULL , '
  || 'ADDR_FIELD1    VARCHAR2 (2 CHAR) NOT NULL , '
  || 'ADDR_FIELD2    VARCHAR2 (4 CHAR) NOT NULL , '
  || 'ADDR_FIELD3    VARCHAR2 (4 CHAR) NOT NULL , '
  || 'COUNTY         VARCHAR2 (30 CHAR) NOT NULL , '
  || 'STATE          VARCHAR2 (6 CHAR) NOT NULL , '
  || 'POSTAL         VARCHAR2 (12 CHAR) NOT NULL , '
  || 'GEO_CODE       VARCHAR2 (11 CHAR) NOT NULL , '
  || 'IN_CITY_LIMIT  VARCHAR2 (1 CHAR) NOT NULL , '
  || 'ADDRESS1_AC    VARCHAR2 (55 CHAR) NOT NULL , '
  || 'ADDRESS2_AC    VARCHAR2 (55 CHAR) NOT NULL , '
  || 'ADDRESS3_AC    VARCHAR2 (55 CHAR) NOT NULL , '
  || 'CITY_AC        VARCHAR2 (30 CHAR) NOT NULL , '
  || 'REG_REGION     VARCHAR2 (5 CHAR) NOT NULL , '
  || 'LASTUPDDTTM    TIMESTAMP , '
  || 'LASTUPDOPRID   VARCHAR2 (30 CHAR) NOT NULL , '
  || 'DW_PROCESS_WID NUMBER (12) NOT NULL , '
  || 'DW_SOURCE_WID  NUMBER (12) NOT NULL , '
  || 'DW_CREATE_DTM  DATE NOT NULL '
  || ') '
);

sql('ds_DWH', ''
  || 'ALTER TABLE PS_ADDRESSES ADD CONSTRAINT PS_ADDRESSES_PK PRIMARY KEY ( EFFDT, ADDRESS_TYPE, EMPLID ) '
);
}}}